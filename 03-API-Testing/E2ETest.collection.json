{
	"info": {
		"_postman_id": "192faf2f-01bd-4c62-9ef3-0c4989b76af3",
		"name": "End-To-End Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post Create a Gist_",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Insert gist successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.id).exist\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"gistId\", jsonData.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"{{$randomLoremWords}}\",\n  \"content\": \"{{$randomLoremWords}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/gists?since=5611048.349707335",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gists"
					],
					"query": [
						{
							"key": "since",
							"value": "5611048.349707335",
							"description": "Timestamp in unix time format. Only Gists updated at or after this time are returned."
						}
					]
				},
				"description": "Collection of Gists."
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"velit Excepteur\",\n  \"content\": \"dolore id magna\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gists?since=5611048.349707335",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists"
							],
							"query": [
								{
									"key": "since",
									"value": "5611048.349707335"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"created_at\": \"ut incididunt reprehenderi\",\n  \"description\": \"voluptate sunt ut\",\n  \"content\": \"Lorem\",\n  \"id\": \"magn\",\n  \"_links\": {\n    \"self\": {\n      \"href\": \"consectetur mi\",\n      \"templated\": false\n    },\n    \"star\": {\n      \"href\": \"qui Excepteur cupidatat adipisicing\",\n      \"templated\": true\n    }\n  }\n}"
				}
			]
		},
		{
			"name": "Get List All Gists_",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const gists = pm.response.json()._embedded.gists;\r",
							"\r",
							"pm.test(\"Test Gist is available\", function () {\r",
							"    pm.expect(gists[0]).exist\r",
							"});\r",
							"\r",
							"pm.test(\"Check Latest gist matches current id\", function(){\r",
							"   pm.expect(gists.any((gist) => {\r",
							"       return gist.id == pm.collectionVariables.get(\"gistId\");\r",
							"   })).to.be.true\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gists?since=5611048.349707335",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gists"
					],
					"query": [
						{
							"key": "since",
							"value": "5611048.349707335",
							"description": "Timestamp in unix time format. Only Gists updated at or after this time are returned."
						}
					]
				},
				"description": "Collection of Gists."
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists?since=5611048.349707335",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists"
							],
							"query": [
								{
									"key": "since",
									"value": "5611048.349707335"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"id\",\n      \"templated\": true\n    }\n  },\n  \"_embedded\": {\n    \"gists\": [\n      {\n        \"created_at\": \"qui ut ut cillum\",\n        \"description\": \"fugiat aliqua Lorem culpa aliquip\",\n        \"content\": \"nisi officia enim\",\n        \"id\": \"rep\",\n        \"_links\": {\n          \"self\": {\n            \"href\": \"velit ut\",\n            \"templated\": true\n          },\n          \"star\": {\n            \"href\": \"nostrud ex dolore reprehenderit\",\n            \"templated\": false\n          }\n        }\n      },\n      {\n        \"created_at\": \"ut pariatur adipisicing tempor\",\n        \"description\": \"in veniam sunt commodo\",\n        \"content\": \"irure ipsum\",\n        \"id\": \"irure laboris et\",\n        \"_links\": {\n          \"self\": {\n            \"href\": \"ullamco Duis\",\n            \"templated\": true\n          },\n          \"star\": {\n            \"href\": \"esse ea\",\n            \"templated\": true\n          }\n        }\n      }\n    ]\n  },\n  \"total\": 74554283.08569458\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "default"
		},
		{
			"key": "gistId",
			"value": ""
		}
	]
}